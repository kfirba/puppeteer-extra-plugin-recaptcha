{"version":3,"file":"index.esm.js","sources":["../src/content.ts","../src/provider/2captcha-api.ts","../src/provider/2captcha.ts","../src/index.ts"],"sourcesContent":["import * as types from './types'\n\nexport const ContentScriptDefaultOpts: types.ContentScriptOpts = {\n  visualFeedback: true,\n}\n\nexport const ContentScriptDefaultData: types.ContentScriptData = {\n  solutions: [],\n}\n\n/**\n * Content script for Recaptcha handling (runs in browser context)\n * @note External modules are not supported here (due to content script isolation)\n */\nexport class RecaptchaContentScript {\n  private opts: types.ContentScriptOpts\n  private data: types.ContentScriptData\n\n  constructor(\n    opts = ContentScriptDefaultOpts,\n    data = ContentScriptDefaultData\n  ) {\n    this.opts = opts\n    this.data = data\n  }\n\n  // Poor mans _.pluck\n  private _pick = (props: any[]) => (o: any) =>\n    props.reduce((a, e) => ({ ...a, [e]: o[e] }), {})\n\n  // make sure the element is visible - this is equivalent to jquery's is(':visible')\n  private _isVisible = (elem: any) =>\n    !!(\n      elem.offsetWidth ||\n      elem.offsetHeight ||\n      (typeof elem.getClientRects === 'function' &&\n        elem.getClientRects().length)\n    )\n\n  // Recaptcha client is a nested, circular object with object keys that seem generated\n  // We flatten that object a couple of levels deep for easy access to certain keys we're interested in.\n  private _flattenObject(item: any, levels = 2, ignoreHTML = true) {\n    const isObject = (x: any) => x && typeof x === 'object'\n    const isHTML = (x: any) => x && x instanceof HTMLElement\n    let newObj = {} as any\n    for (let i = 0; i < levels; i++) {\n      item = Object.keys(newObj).length ? newObj : item\n      Object.keys(item).forEach((key) => {\n        if (ignoreHTML && isHTML(item[key])) return\n        if (isObject(item[key])) {\n          Object.keys(item[key]).forEach((innerKey) => {\n            if (ignoreHTML && isHTML(item[key][innerKey])) return\n            const keyName = isObject(item[key][innerKey])\n              ? `obj_${key}_${innerKey}`\n              : `${innerKey}`\n            newObj[keyName] = item[key][innerKey]\n          })\n        } else {\n          newObj[key] = item[key]\n        }\n      })\n    }\n    return newObj\n  }\n\n  // Helper function to return an object based on a well known value\n  private _getKeyByValue(object: any, value: any) {\n    return Object.keys(object).find((key) => object[key] === value)\n  }\n\n  private async _waitUntilDocumentReady() {\n    return new Promise(function (resolve) {\n      if (!document || !window) return resolve()\n      const loadedAlready = /^loaded|^i|^c/.test(document.readyState)\n      if (loadedAlready) return resolve()\n\n      function onReady() {\n        resolve()\n        document.removeEventListener('DOMContentLoaded', onReady)\n        window.removeEventListener('load', onReady)\n      }\n\n      document.addEventListener('DOMContentLoaded', onReady)\n      window.addEventListener('load', onReady)\n    })\n  }\n\n  private _paintCaptchaBusy($iframe: HTMLIFrameElement) {\n    try {\n      if (this.opts.visualFeedback) {\n        $iframe.style.filter = `opacity(60%) hue-rotate(400deg)` // violet\n      }\n    } catch (error) {\n      // noop\n    }\n    return $iframe\n  }\n\n  private _paintCaptchaSolved($iframe: HTMLIFrameElement) {\n    try {\n      if (this.opts.visualFeedback) {\n        $iframe.style.filter = `opacity(60%) hue-rotate(230deg)` // green\n      }\n    } catch (error) {\n      // noop\n    }\n    return $iframe\n  }\n\n  private _findVisibleIframeNodes() {\n    const selectors = `iframe[src^='https://www.google.com/recaptcha/api2/anchor'][name^=\"a-\"] , \n                       iframe[src^='https://www.google.com/recaptcha/enterprise/anchor'][name^=\"a-\"]`\n    const frames = Array.from(\n      document.querySelectorAll<HTMLIFrameElement>(selectors)\n    )\n\n    const framesInFrames = Array.from(\n      document\n        .querySelector<HTMLIFrameElement>('iframe')\n        .contentWindow.document.querySelectorAll<HTMLIFrameElement>(selectors)\n    )\n\n    return [...frames, ...framesInFrames]\n  }\n  private _findVisibleIframeNodeById(id?: string) {\n    const selectors = `iframe[src^='https://www.google.com/recaptcha/api2/anchor'][name^=\"a-${\n      id || ''\n    }\"], \n                       iframe[src^='https://www.google.com/recaptcha/enterprise/anchor'][name^=\"a-${\n                         id || ''\n                       }\"]`\n\n    let frame: HTMLIFrameElement | null = document.querySelector<\n      HTMLIFrameElement\n    >(selectors)\n    if (frame) {\n      return frame\n    }\n\n    return document\n      .querySelector<HTMLIFrameElement>('iframe')\n      .contentWindow.document.querySelector<HTMLIFrameElement>(selectors)\n  }\n\n  private _hideChallengeWindowIfPresent(id?: string) {\n    const selectors = `iframe[src^='https://www.google.com/recaptcha/api2/bframe'][name^=\"a-${\n      id || ''\n    }\"] , \n                       iframe[src^='https://www.google.com/recaptcha/enterprise/bframe'][name^=\"a-${\n                         id || ''\n                       }\"]`\n\n    let frame: HTMLElement | null = document.querySelector<HTMLIFrameElement>(\n      selectors\n    )\n\n    if (!frame) {\n      frame = document\n        .querySelector<HTMLIFrameElement>('iframe')\n        .contentWindow.document.querySelector<HTMLIFrameElement>(selectors)\n    }\n\n    if (!frame) {\n      return\n    }\n    while (\n      frame &&\n      frame.parentElement &&\n      frame.parentElement !== document.body\n    ) {\n      frame = frame.parentElement\n    }\n    if (frame) {\n      frame.style.visibility = 'hidden'\n    }\n  }\n\n  private getClientsFromWindow(window) {\n    if (!window || !window.__google_recaptcha_client) return\n    if (!window.___grecaptcha_cfg || !window.___grecaptcha_cfg.clients) {\n      return\n    }\n    if (!Object.keys(window.___grecaptcha_cfg.clients).length) return\n    return window.___grecaptcha_cfg.clients\n  }\n\n  private getClients() {\n    const clients = this.getClientsFromWindow(window)\n    if (clients) {\n      return clients\n    }\n\n    for (const iframe of Array.from(\n      document.querySelectorAll<HTMLIFrameElement>('iframe')\n    )) {\n      const iframeClients = this.getClientsFromWindow(iframe.contentWindow)\n      if (iframeClients) {\n        return iframeClients\n      }\n    }\n  }\n\n  private getVisibleIframesIds() {\n    // Find all visible recaptcha boxes through their iframes\n    return this._findVisibleIframeNodes()\n      .filter(($f) => this._isVisible($f))\n      .map(($f) => this._paintCaptchaBusy($f))\n      .filter(($f) => $f && $f.getAttribute('name'))\n      .map(($f) => $f.getAttribute('name') || '') // a-841543e13666\n      .map(\n        (rawId) => rawId.split('-').slice(-1)[0] // a-841543e13666 => 841543e13666\n      )\n      .filter((id) => id)\n  }\n\n  private getResponseInputById(id?: string) {\n    if (!id) return\n    const $iframe = this._findVisibleIframeNodeById(id)\n    if (!$iframe) return\n    const $parentForm =\n      $iframe.closest(`form`) || $iframe.closest(`.grecaptcha-badge`)\n    if ($parentForm) {\n      return $parentForm.querySelector(`[name='g-recaptcha-response']`)\n    }\n    // Not all reCAPTCHAs are in forms\n    // https://github.com/berstend/puppeteer-extra/issues/57\n    if (document && document.body) {\n      return document.body.querySelector(`[name='g-recaptcha-response']`)\n    }\n  }\n\n  private getClientById(id?: string) {\n    if (!id) return\n    const clients = this.getClients()\n    // Lookup captcha \"client\" info using extracted id\n    let client: any = Object.values(clients || {})\n      .filter((obj) => this._getKeyByValue(obj, id))\n      .shift() // returns first entry in array or undefined\n    if (!client) return\n    client = this._flattenObject(client) as any\n    client.widgetId = client.id\n    client.id = id\n    return client\n  }\n\n  private extractInfoFromClient(client?: any) {\n    if (!client) return\n    const info: types.CaptchaInfo = this._pick(['sitekey', 'callback'])(client)\n    if (!info.sitekey) return\n    info.id = client.id\n    // info.s = client.s // google site specific\n    info.widgetId = client.widgetId\n    info.display = this._pick([\n      'size',\n      'top',\n      'left',\n      'width',\n      'height',\n      'theme',\n    ])(client)\n    // callbacks can be strings or funtion refs\n    if (info.callback && typeof info.callback === 'function') {\n      info.callback = info.callback.name || 'anonymous'\n    }\n    if (document && document.location) info.url = document.location.href\n    return info\n  }\n\n  public async findRecaptchas() {\n    const result = {\n      captchas: [] as (types.CaptchaInfo | undefined)[],\n      error: null as any,\n    }\n    try {\n      await this._waitUntilDocumentReady()\n      const clients = this.getClients()\n      if (!clients) return result\n      result.captchas = this.getVisibleIframesIds()\n        .map((id) => this.getClientById(id))\n        .map((client) => this.extractInfoFromClient(client))\n        .map((info) => {\n          if (!info) return\n          const $input = this.getResponseInputById(info.id)\n          info.hasResponseElement = !!$input\n          return info\n        })\n        .filter((info) => info)\n    } catch (error) {\n      result.error = error\n      return result\n    }\n    return result\n  }\n\n  public async enterRecaptchaSolutions() {\n    const result = {\n      solved: [] as (types.CaptchaSolved | undefined)[],\n      error: null as any,\n    }\n    try {\n      await this._waitUntilDocumentReady()\n      const clients = this.getClients()\n      if (!clients) {\n        result.error = 'No recaptchas found'\n        return result\n      }\n      const solutions = this.data.solutions\n      if (!solutions || !solutions.length) {\n        result.error = 'No solutions provided'\n        return result\n      }\n\n      result.solved = this.getVisibleIframesIds()\n        .map((id) => this.getClientById(id))\n        .map((client) => {\n          const solved: types.CaptchaSolved = {\n            id: client.id,\n            responseElement: false,\n            responseCallback: false,\n          }\n          const $iframe = this._findVisibleIframeNodeById(solved.id)\n          if (!$iframe) {\n            solved.error = `Iframe not found for id '${solved.id}'`\n            return solved\n          }\n          const solution = solutions.find((s) => s.id === solved.id)\n          if (!solution || !solution.text) {\n            solved.error = `Solution not found for id '${solved.id}'`\n            return solved\n          }\n          // Hide if present challenge window\n          this._hideChallengeWindowIfPresent(solved.id)\n          // Enter solution in response textarea\n          const $input = this.getResponseInputById(solved.id)\n          if ($input) {\n            $input.innerHTML = solution.text\n            solved.responseElement = true\n          }\n          // Enter solution in optional callback\n          if (client.callback) {\n            try {\n              if (typeof client.callback === 'function') {\n                client.callback.call(window, solution.text)\n              } else {\n                eval(client.callback).call(window, solution.text) // tslint:disable-line\n              }\n              solved.responseCallback = true\n            } catch (error) {\n              solved.error = error\n            }\n          }\n          // Finishing up\n          solved.isSolved = solved.responseCallback || solved.responseElement\n          solved.solvedAt = new Date()\n          this._paintCaptchaSolved($iframe)\n          return solved\n        })\n    } catch (error) {\n      result.error = error\n      return result\n    }\n    return result\n  }\n}\n\n/*\n// Example data\n\n{\n    \"captchas\": [{\n        \"sitekey\": \"6LdAUwoUAAAAAH44X453L0tUWOvx11XXXXXXXX\",\n        \"id\": \"lnfy52r0cccc\",\n        \"widgetId\": 0,\n        \"display\": {\n            \"size\": null,\n            \"top\": 23,\n            \"left\": 13,\n            \"width\": 28,\n            \"height\": 28,\n            \"theme\": null\n        },\n        \"url\": \"https://example.com\",\n        \"hasResponseElement\": true\n    }],\n    \"error\": null\n}\n\n{\n    \"solutions\": [{\n        \"id\": \"lnfy52r0cccc\",\n        \"provider\": \"2captcha\",\n        \"providerCaptchaId\": \"61109548000\",\n        \"text\": \"03AF6jDqVSOVODT-wLKZ47U0UXz...\",\n        \"requestAt\": \"2019-02-09T18:30:43.587Z\",\n        \"responseAt\": \"2019-02-09T18:30:57.937Z\"\n    }]\n    \"error\": null\n}\n\n{\n    \"solved\": [{\n        \"id\": \"lnfy52r0cccc\",\n        \"responseElement\": true,\n        \"responseCallback\": false,\n        \"isSolved\": true,\n        \"solvedAt\": {}\n    }]\n    \"error\": null\n}\n*/\n","// https://github.com/bochkarev-artem/2captcha/blob/master/index.js\n// TODO: Create our own API wrapper\n\nvar http = require('http')\nvar https = require('https')\nvar url = require('url')\nvar querystring = require('querystring')\n\nvar apiKey\nvar apiInUrl = 'http://2captcha.com/in.php'\nvar apiResUrl = 'http://2captcha.com/res.php'\nvar apiMethod = 'base64'\nvar apiMethodRecaptcha = 'userrecaptcha'\nvar SOFT_ID = '2589'\n\nvar defaultOptions = {\n  pollingInterval: 2000,\n  retries: 3\n}\n\nfunction pollCaptcha(captchaId, options, invalid, callback) {\n  invalid = invalid.bind({ options: options, captchaId: captchaId })\n  var intervalId = setInterval(function() {\n    var httpRequestOptions = url.parse(\n      apiResUrl +\n        '?action=get&soft_id=' +\n        SOFT_ID +\n        '&key=' +\n        apiKey +\n        '&id=' +\n        captchaId\n    )\n    var request = http.request(httpRequestOptions, function(response) {\n      var body = ''\n\n      response.on('data', function(chunk) {\n        body += chunk\n      })\n\n      response.on('end', function() {\n        if (body === 'CAPCHA_NOT_READY') {\n          return\n        }\n\n        clearInterval(intervalId)\n\n        var result = body.split('|')\n        if (result[0] !== 'OK') {\n          callback(result[0]) //error\n        } else {\n          callback(\n            null,\n            {\n              id: captchaId,\n              text: result[1]\n            },\n            invalid\n          )\n        }\n        callback = function() {} // prevent the callback from being called more than once, if multiple http requests are open at the same time.\n      })\n    })\n\n    request.end()\n  }, options.pollingInterval || defaultOptions.pollingInterval)\n}\n\nexport const setApiKey = function(key) {\n  apiKey = key\n}\n\nexport const decode = function(base64, options, callback) {\n  if (!callback) {\n    callback = options\n    options = defaultOptions\n  }\n  var httpRequestOptions = url.parse(apiInUrl)\n  httpRequestOptions.method = 'POST'\n\n  var postData = {\n    method: apiMethod,\n    key: apiKey,\n    soft_id: SOFT_ID,\n    body: base64\n  }\n\n  postData = querystring.stringify(postData)\n\n  var request = http.request(httpRequestOptions, function(response) {\n    var body = ''\n\n    response.on('data', function(chunk) {\n      body += chunk\n    })\n\n    response.on('end', function() {\n      var result = body.split('|')\n      if (result[0] !== 'OK') {\n        return callback(result[0])\n      }\n\n      pollCaptcha(\n        result[1],\n        options,\n        function(error) {\n          var callbackToInitialCallback = callback\n\n          report(this.captchaId)\n\n          if (error) {\n            return callbackToInitialCallback('CAPTCHA_FAILED')\n          }\n\n          if (!this.options.retries) {\n            this.options.retries = defaultOptions.retries\n          }\n          if (this.options.retries > 1) {\n            this.options.retries = this.options.retries - 1\n            decode(base64, this.options, callback)\n          } else {\n            callbackToInitialCallback('CAPTCHA_FAILED_TOO_MANY_TIMES')\n          }\n        },\n        callback\n      )\n    })\n  })\n  request.write(postData)\n  request.end()\n}\n\nexport const decodeReCaptcha = function(captcha, pageUrl, options, callback) {\n  if (!callback) {\n    callback = options\n    options = defaultOptions\n  }\n  var httpRequestOptions = url.parse(apiInUrl)\n  httpRequestOptions.method = 'POST'\n\n  var postData = {\n    method: apiMethodRecaptcha,\n    key: apiKey,\n    soft_id: SOFT_ID,\n    googlekey: captcha,\n    pageurl: pageUrl\n  }\n\n  postData = querystring.stringify(postData)\n\n  var request = http.request(httpRequestOptions, function(response) {\n    var body = ''\n\n    response.on('data', function(chunk) {\n      body += chunk\n    })\n\n    response.on('end', function() {\n      var result = body.split('|')\n      if (result[0] !== 'OK') {\n        return callback(result[0])\n      }\n\n      pollCaptcha(\n        result[1],\n        options,\n        function(error) {\n          var callbackToInitialCallback = callback\n\n          report(this.captchaId)\n\n          if (error) {\n            return callbackToInitialCallback('CAPTCHA_FAILED')\n          }\n\n          if (!this.options.retries) {\n            this.options.retries = defaultOptions.retries\n          }\n          if (this.options.retries > 1) {\n            this.options.retries = this.options.retries - 1\n            decode(captcha, this.options, callback)\n          } else {\n            callbackToInitialCallback('CAPTCHA_FAILED_TOO_MANY_TIMES')\n          }\n        },\n        callback\n      )\n    })\n  })\n  request.write(postData)\n  request.end()\n}\n\nexport const decodeUrl = function(uri, options, callback) {\n  if (!callback) {\n    callback = options\n    options = defaultOptions\n  }\n  var protocol = http\n  if (uri.indexOf('https') == 0) protocol = https\n\n  var options = url.parse(uri)\n\n  var request = protocol.request(options, function(response) {\n    var body = ''\n    response.setEncoding('base64')\n\n    response.on('data', function(chunk) {\n      body += chunk\n    })\n\n    response.on('end', function() {\n      decode(body, options, callback)\n    })\n  })\n  request.end()\n}\n\nexport const solveRecaptchaFromHtml = function(html, options, callback) {\n  if (!callback) {\n    callback = options\n    options = defaultOptions\n  }\n  var googleUrl = html.split('/challenge?k=')\n  if (googleUrl.length < 2) return callback('No captcha found in html')\n  googleUrl = googleUrl[1]\n  googleUrl = googleUrl.split('\"')[0]\n  googleUrl = googleUrl.split(\"'\")[0]\n  googleUrl = 'https://www.google.com/recaptcha/api/challenge?k=' + googleUrl\n\n  var protocol = http\n  if (googleUrl.indexOf('https') == 0) protocol = https\n\n  var httpRequestOptions = url.parse(googleUrl)\n\n  var request = protocol.request(httpRequestOptions, function(response) {\n    var body = ''\n    response.on('data', function(chunk) {\n      body += chunk\n    })\n\n    response.on('end', function() {\n      var challengeArr = body.split(\"'\")\n      if (!challengeArr[1]) return callback('Parsing captcha failed')\n      var challenge = challengeArr[1]\n      if (challenge.length === 0) return callback('Parsing captcha failed')\n\n      decodeUrl(\n        'https://www.google.com/recaptcha/api/image?c=' + challenge,\n        options,\n        function(error, result, invalid) {\n          if (result) {\n            result.challenge = challenge\n          }\n          callback(error, result, invalid)\n        }\n      )\n    })\n  })\n  request.end()\n}\n\nexport const report = function(captchaId) {\n  var reportUrl =\n    apiResUrl +\n    '?action=reportbad&soft_id=' +\n    SOFT_ID +\n    '&key=' +\n    apiKey +\n    '&id=' +\n    captchaId\n  var options = url.parse(reportUrl)\n\n  var request = http.request(options, function(response) {\n    // var body = ''\n    // response.on('data', function(chunk) {\n    //   body += chunk\n    // })\n    // response.on('end', function() {})\n  })\n  request.end()\n}\n","export const PROVIDER_ID = '2captcha'\nimport * as types from '../types'\n\nimport Debug from 'debug'\nconst debug = Debug(`puppeteer-extra-plugin:recaptcha:${PROVIDER_ID}`)\n\n// const solver = require('./2captcha-api')\nimport * as solver from './2captcha-api'\n\nconst secondsBetweenDates = (before: Date, after: Date) =>\n  (after.getTime() - before.getTime()) / 1000\n\nexport interface DecodeRecaptchaAsyncResult {\n  err?: any\n  result?: any\n  invalid?: any\n}\n\nasync function decodeRecaptchaAsync(\n  token: string,\n  sitekey: string,\n  url: string,\n  opts = { pollingInterval: 2000 }\n): Promise<DecodeRecaptchaAsyncResult> {\n  return new Promise(resolve => {\n    const cb = (err: any, result: any, invalid: any) =>\n      resolve({ err, result, invalid })\n    try {\n      solver.setApiKey(token)\n      solver.decodeReCaptcha(sitekey, url, opts, cb)\n    } catch (error) {\n      return resolve({ err: error })\n    }\n  })\n}\n\nexport async function getSolutions(\n  captchas: types.CaptchaInfo[] = [],\n  token?: string\n): Promise<types.GetSolutionsResult> {\n  const solutions = await Promise.all(\n    captchas.map(c => getSolution(c, token || ''))\n  )\n  return { solutions, error: solutions.find(s => !!s.error) }\n}\n\nasync function getSolution(\n  captcha: types.CaptchaInfo,\n  token: string\n): Promise<types.CaptchaSolution> {\n  const solution: types.CaptchaSolution = {\n    provider: PROVIDER_ID\n  }\n  try {\n    if (!captcha || !captcha.sitekey || !captcha.url || !captcha.id) {\n      throw new Error('Missing data in captcha')\n    }\n    solution.id = captcha.id\n    solution.requestAt = new Date()\n    debug('Requesting solution..', solution)\n    const { err, result, invalid } = await decodeRecaptchaAsync(\n      token,\n      captcha.sitekey,\n      captcha.url\n    )\n    debug('Got response', { err, result, invalid })\n    if (err) throw new Error(`${PROVIDER_ID} error: ${err}`)\n    if (!result || !result.text || !result.id) {\n      throw new Error(`${PROVIDER_ID} error: Missing response data: ${result}`)\n    }\n    solution.providerCaptchaId = result.id\n    solution.text = result.text\n    solution.responseAt = new Date()\n    solution.hasSolution = !!solution.text\n    solution.duration = secondsBetweenDates(\n      solution.requestAt,\n      solution.responseAt\n    )\n  } catch (error) {\n    debug('Error', error)\n    solution.error = error.toString()\n  }\n  return solution\n}\n","import { PuppeteerExtraPlugin } from 'puppeteer-extra-plugin'\n\nimport { Browser, Frame, Page } from 'puppeteer'\n\nimport * as types from './types'\n\nimport { RecaptchaContentScript } from './content'\nimport * as TwoCaptcha from './provider/2captcha'\n\nexport const BuiltinSolutionProviders: types.SolutionProvider[] = [\n  {\n    id: TwoCaptcha.PROVIDER_ID,\n    fn: TwoCaptcha.getSolutions\n  }\n]\n\n/**\n * A puppeteer-extra plugin to automatically detect and solve reCAPTCHAs.\n * @noInheritDoc\n */\nexport class PuppeteerExtraPluginRecaptcha extends PuppeteerExtraPlugin {\n  constructor(opts: Partial<types.PluginOptions>) {\n    super(opts)\n    this.debug('Initialized', this.opts)\n  }\n\n  get name() {\n    return 'recaptcha'\n  }\n\n  get defaults(): types.PluginOptions {\n    return {\n      visualFeedback: true,\n      throwOnError: false\n    }\n  }\n\n  get contentScriptOpts(): types.ContentScriptOpts {\n    const { visualFeedback } = this.opts\n    return {\n      visualFeedback\n    }\n  }\n\n  private _generateContentScript(\n    fn: 'findRecaptchas' | 'enterRecaptchaSolutions',\n    data?: any\n  ) {\n    this.debug('_generateContentScript', fn, data)\n    return `(async() => {\n      const DATA = ${JSON.stringify(data || null)}\n      const OPTS = ${JSON.stringify(this.contentScriptOpts)}\n\n      ${RecaptchaContentScript.toString()}\n      const script = new RecaptchaContentScript(OPTS, DATA)\n      return script.${fn}()\n    })()`\n  }\n\n  async findRecaptchas(page: Page | Frame) {\n    this.debug('findRecaptchas')\n    // As this might be called very early while recaptcha is still loading\n    // we add some extra waiting logic for developer convenience.\n    const hasRecaptchaScriptTag = await page.$(\n      `script[src*=\"/recaptcha/api.js\"]`\n    )\n    this.debug('hasRecaptchaScriptTag', !!hasRecaptchaScriptTag)\n    if (hasRecaptchaScriptTag) {\n      this.debug('waitForRecaptchaClient - start', new Date())\n      await page.waitForFunction(\n        `\n        (function() {\n          return window.___grecaptcha_cfg && window.___grecaptcha_cfg.count\n        })()\n      `,\n        { polling: 200, timeout: 10 * 1000 }\n      )\n      this.debug('waitForRecaptchaClient - end', new Date()) // used as timer\n    }\n    // Even without a recaptcha script tag we're trying, just in case.\n    const evaluateReturn = await page.evaluate(\n      this._generateContentScript('findRecaptchas')\n    )\n    const response: types.FindRecaptchasResult = evaluateReturn as any\n    this.debug('findRecaptchas', response)\n    if (this.opts.throwOnError && response.error) {\n      throw new Error(response.error)\n    }\n    return response\n  }\n\n  async getRecaptchaSolutions(\n    captchas: types.CaptchaInfo[],\n    provider?: types.SolutionProvider\n  ) {\n    this.debug('getRecaptchaSolutions')\n    provider = provider || this.opts.provider\n    if (\n      !provider ||\n      (!provider.token && !provider.fn) ||\n      (provider.token && provider.token === 'XXXXXXX' && !provider.fn)\n    ) {\n      throw new Error('Please provide a solution provider to the plugin.')\n    }\n    let fn = provider.fn\n    if (!fn) {\n      const builtinProvider = BuiltinSolutionProviders.find(\n        p => p.id === (provider || {}).id\n      )\n      if (!builtinProvider || !builtinProvider.fn) {\n        throw new Error(\n          `Cannot find builtin provider with id '${provider.id}'.`\n        )\n      }\n      fn = builtinProvider.fn\n    }\n    const response = await fn.call(this, captchas, provider.token)\n    response.error =\n      response.error ||\n      response.solutions.find((s: types.CaptchaSolution) => !!s.error)\n    this.debug('getRecaptchaSolutions', response)\n    if (response && response.error) {\n      console.warn(\n        'PuppeteerExtraPluginRecaptcha: An error occured during \"getRecaptchaSolutions\":',\n        response.error\n      )\n    }\n    if (this.opts.throwOnError && response.error) {\n      throw new Error(response.error)\n    }\n    return response\n  }\n\n  async enterRecaptchaSolutions(\n    page: Page | Frame,\n    solutions: types.CaptchaSolution[],\n    captchasAttempted: types.CaptchaInfo[] | false,\n  ) {\n    this.debug('enterRecaptchaSolutions')\n    const evaluateReturn = await page.evaluate(\n      this._generateContentScript('enterRecaptchaSolutions', {\n        solutions,\n        captchasAttempted\n      })\n    )\n    const response: types.EnterRecaptchaSolutionsResult = evaluateReturn as any\n    response.error = response.error || response.solved.find(s => !!s.error)\n    this.debug('enterRecaptchaSolutions', response)\n    if (this.opts.throwOnError && response.error) {\n      throw new Error(response.error)\n    }\n    return response\n  }\n\n  async solveRecaptchas(\n    page: Page | Frame,\n    options: types.SolveRecaptchasOptions = { },\n  ): Promise<types.SolveRecaptchasResult> {\n    this.debug('solveRecaptchas')\n    const response: types.SolveRecaptchasResult = {\n      captchas: [],\n      solutions: [],\n      solved: [],\n      error: null\n    }\n    try {\n      // If `this.opts.throwOnError` is set any of the\n      // following will throw and abort execution.\n      const { captchas, error: captchasError } = await this.findRecaptchas(page)\n      response.captchas = options.filterFoundRecaptchas ? options.filterFoundRecaptchas(captchas) : captchas;\n\n      if (captchas.length) {\n        const {\n          solutions,\n          error: solutionsError\n        } = await this.getRecaptchaSolutions(response.captchas)\n        response.solutions = solutions\n\n        const {\n          solved,\n          error: solvedError\n        } = await this.enterRecaptchaSolutions(page, response.solutions, response.captchas)\n        response.solved = solved\n\n        response.error = captchasError || solutionsError || solvedError\n      }\n    } catch (error) {\n      response.error = error.toString()\n    }\n    this.debug('solveRecaptchas', response)\n    if (this.opts.throwOnError && response.error) {\n      throw new Error(response.error)\n    }\n    return response\n  }\n\n  private _addCustomMethods(prop: Page | Frame) {\n    prop.findRecaptchas = async () => this.findRecaptchas(prop)\n    prop.getRecaptchaSolutions = async (\n      captchas: types.CaptchaInfo[],\n      provider?: types.SolutionProvider\n    ) => this.getRecaptchaSolutions(captchas, provider)\n    prop.enterRecaptchaSolutions = async (solutions: types.CaptchaSolution[]) =>\n      this.enterRecaptchaSolutions(prop, solutions, false)\n    // Add convenience methods that wraps all others\n    prop.solveRecaptchas = async (options: types.SolveRecaptchasOptions = {}) => this.solveRecaptchas(prop, options)\n  }\n\n  async onPageCreated(page: Page) {\n    this.debug('onPageCreated', page.url())\n    // Make sure we can run our content script\n    await page.setBypassCSP(true)\n\n    // Add custom page methods\n    this._addCustomMethods(page)\n\n    // Add custom methods to potential frames as well\n    page.on('frameattached', frame => {\n      if (!frame) return\n      this._addCustomMethods(frame)\n    })\n  }\n\n  /** Add additions to already existing pages and frames */\n  async onBrowser(browser: Browser) {\n    const pages = await browser.pages()\n    for (const page of pages) {\n      this._addCustomMethods(page)\n      for (const frame of page.mainFrame().childFrames()) {\n        this._addCustomMethods(frame)\n      }\n    }\n  }\n}\n\n/** Default export, PuppeteerExtraPluginRecaptcha  */\nconst defaultExport = (options?: Partial<types.PluginOptions>) => {\n  return new PuppeteerExtraPluginRecaptcha(options || {})\n}\n\nexport default defaultExport\n"],"names":["solver.setApiKey","solver.decodeReCaptcha","TwoCaptcha.PROVIDER_ID","TwoCaptcha.getSolutions"],"mappings":"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"}